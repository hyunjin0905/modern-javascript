// 클로저와 렉시컬 환경

const x  = 1;
// 1
function outer() {
    const x = 10;
   // 2
    function inner() {
        console.log(x)
    }
    return inner;
}

// 3  outer 함수의 실행컨텍스트는 실행 컨텍스트 스택에서 팝되어 제거된다
// inner 를 반환하고 생명주기를 마감한다
const innerFunc = outer() // 3
innerFunc() // 4
// 따라서 outer 함수의 지역변수 x는 더 유효하지 않게 되어 x 변수에 접근할수 있는 방법은 없어보인다


// 외부 함수보다 중첩함수가 더 오래 유지 되는 경우 중첩함수는 이미 생명주기가 종료한 외부 함수의 변수를 참조 할수 있다 이런한 중첩 함수를 클로저라고 부른다

// 클로저가 아닌것
// 1. 상위스코프의 식별자를 참조 하지 않을때
// 2. 중첩함수가 외부함수보다 생명주기 짧을 경우




